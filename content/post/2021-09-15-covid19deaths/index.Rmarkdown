---
title: Analyze Covid19 data from the CDC
author: Bonnie Thiel
date: '2021-09-15'
slug: covid19deaths
categories: []
tags: []
subtitle: 'This tutorial will show how to use R to download CDC data and create a chart showing the number of Covid-19 deaths by sex for each state'
summary: 'This tutorial will show how to use R to download CDC data and create a chart showing the number of Covid-19 deaths by sex for each state'
authors: 
lastmod: '2021-09-15T17:48:59-04:00'
featured: no
image:
  caption: 'Image credit:[**CDC**](https://www.cdc.gov/media/dpk/diseases-and-conditions/coronavirus/images/outbreak-coronavirus-world-1024x506px.jpg)'
  focal_point: ''
  preview_only: no
projects: []
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


# Strategy: 
Let's calculate some statistics about deaths from Covid-19 based on CDC data
  - Demonstrate how to get data from an internet source 
  - Do some data wrangling and simple statistical analysis 
  - Plot results
  
```{r , echo=FALSE}
colorize <- function(x, color) {
  if (knitr::is_latex_output()) {
    sprintf("\\textcolor{%s}{%s}", color, x)
  } else if (knitr::is_html_output()) {
    sprintf("<span style='color: %s;'>%s</span>", color,
      x)
  } else x
} 
```

```{css, echo=FALSE}
pre {
  max-height: 300px;
  overflow-y: auto;
}

pre[class] {
  max-height: 100px;
}
```

```{css, echo=FALSE}
.scroll-100 {
  max-height: 100px;
  overflow-y: auto;
  background-color: inherit;
}
```


This tutorial assumes you already have R and Rstudio. If not, please start [here](https://rstudio-education.github.io/hopr/starting.html) and then come back

## `r colorize("Get the dataset from the CDC:", "red")` <https://data.cdc.gov/NCHS/Provisional-COVID-19-Deaths-by-Sex-and-Age/9bhg-hcku>

On the CDC page click on the EXPORT button on the top right of the page to download the csv file called 'Provisional_COVID-19_Death_Counts_by_Sex__Age.csv'
download it to your desktop or another folder and copy the path to the clipboard

## `r colorize("Open R studio and click on File -> New File -> Rscript", "red")` 

![Rstudio should look like this](FirstStepOpenRstudio.jpg)
Type commands into the top left quadrant as shown above

##  `r colorize("Install necessary R packages ", "red")`  
(Why? Because you can't load all the programs available in R - it would be way too much. You have to pick what you need and load those particular programs)

To install packages use the "install.packages()" function as shown above

**or** the easier way is to go to the lower right-side window of Rstudio and click on the **Packages** tab. 
Underneath, there is a button for "Install". Click "Install" and type in the names of the packages in the pop-up box: "magrittr" , "tidyverse". These only have to be installed once.

## `r colorize("Load the libraries", "red")` 

**magrittr** is for piping - explained later but just so you know, the %>% in R is called a pipe. You know the picture by Rene Magritte? of the [pipe](https://publicdelivery.org/magritte-not-a-pipe/)?
**tidyverse** contains many functions for data wrangling


```{r ,class.output="scroll-100"}
library(magrittr) 
library(tidyverse) 
```

## `r colorize("Load the dataset using read.csv() or read.table()", "red")`

*NOTE:* the path to your file needs forward slashes / for R not back slashes like windows uses. If you copy your path from windows, change the slashes

Copy the path from the clipboard in the read.table() function shown below so that R knows where to find your data


```{r , echo=TRUE}
covidDeaths <- read.table(file="Provisional_COVID-19_Deaths_by_Sex_and_Age.csv", sep=",", header=TRUE) 
```
The head() function let's you see the first few rows of data
```{r , class.output="scroll-100"}
head(covidDeaths, n=4)
```

## `r colorize("Look at the age and sex categories", "red")` 
A really old and lame joke: *how can you tell the difference between an epidemiologist and a clinician? The epidemiologist is broken down by age and sex*

```{r }
levels(as.factor(covidDeaths$Sex))
```

```{r }
levels(as.factor(covidDeaths$Age.Group))
```
The levels() function shows all the different categories that are included in a variable. levels only works on factors so the as.factor() function changes the character variable to a factor. How do you know if a variable is a factor or character or numeric? Look at the output from the str() function.

```{r ,class.output="scroll-100"}
str(covidDeaths)
```
  
If you can see the categories above then everything seems to be working so let's move on to data wrangling


## `r colorize("FILTER (subset observations/rows) and SELECT (subset variables/columns) ", "red")` 
for example, to get only the *Total* numbers  for males and females 18-29 years and keep only the state, age group, sex, covid death numbers and total death numbers:
```{r , echo=TRUE}
covidDeaths.MF.18to29 <- covidDeaths %>% filter(Group=="By Total" & Age.Group == "18-29 years" & Sex %in% (c("Male", "Female"))) %>% select(State, Age.Group, Sex, COVID.19.Deaths, Total.Deaths) 
head(covidDeaths.MF.18to29)
```

The '<-' symbol is pronounced 'gets' and the %>% is a pipe from the magrittr package and is called 'and then' so the syntax in words is:

*covidDeaths.MF.18to29 'gets' the covidDeaths dataset 'and then' filters to Age.group== 18-29 and sex==Male or Female.*  **Remember to use '==' not just '='**

## `r colorize(" Now do a little analysis: ", "red")`

What are the mean and median number of covid deaths across all states by male and female for 50 years and older?
1. Get rid of the 'United States' total number and include only the state totals
2. Filter to the age groups over 50:  age 50-64 years, plus age 65-74 years, plus age 75-84 years, plus age 85 years and over 

```{r , echo=TRUE}
covidDeaths.MF.over50 <- covidDeaths %>% 
  filter(Group=="By Total" & Age.Group %in% c("50-64 years", "65-74 years", "75-84 years","85 years and over") & 
Sex %in% (c("Male", "Female"))) %>% 
  filter(!State ==  "United States") %>% 
  select(State, Age.Group, Sex, COVID.19.Deaths, Total.Deaths) 
head(covidDeaths.MF.over50) 
```

3. Calculate the mean and median number of covid deaths
```{r , echo=TRUE}
covidDeaths.MF.over50 %>% group_by(Sex) %>% 
  summarize(meanDeaths=mean(COVID.19.Deaths), medianDeaths=median(COVID.19.Deaths))
```

UGH it didn't work! - this is because there are some states with no COVID deaths and the mean and median functions do not exclude NA values by default, i.e. median(x, na.rm = FALSE). Let's change this *function argument* to TRUE so that the function will remove the NA values when computing the statistic

```{r , echo=TRUE}
covidDeaths.MF.over50 %>% group_by(Sex) %>% 
  summarize(meanDeaths=mean(COVID.19.Deaths, na.rm=TRUE), medianDeaths=median(COVID.19.Deaths, na.rm=TRUE))
```
OK first off we see clearly that the medians are smaller than the means. This tells us that there are a few states with a very high number of deaths and a bunch of other states with small numbers.

This reminds me that we should probably take into account the total number of deaths so that we can compare deaths across states while accounting for the differences in state populations.

```{r , class.output="scroll-100"}
covidDeaths.MF.over50.1 <- covidDeaths.MF.over50 %>% 
  mutate(proportional.covid.deaths = ifelse(COVID.19.Deaths==0, NA, COVID.19.Deaths/Total.Deaths))
tail(covidDeaths.MF.over50.1)
```

```{r , echo=TRUE}
covidDeaths.MF.over50.1 %>% group_by(Sex) %>% 
  summarize(meanDeaths=mean(proportional.covid.deaths, na.rm=TRUE), medianDeaths=median(proportional.covid.deaths, na.rm=TRUE))
```
That looks better - now the overall mean and median proportion of deaths due to covid19 are about the same


##  `r colorize("Look at the data. Make a graph of the proportion of covid deaths for each state by sex", "red")` 

Get a graphing package called 'ggpubr' that's pretty easy to use. See <http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/>
install the package "ggpubr" using the lower right hand box in Rstudio and then load the library using the library() function

```{r , echo=TRUE}
library(ggpubr)
```

To plot the proportion of Covid19 deaths among people >50 by sex for each state, we have to first condense all the deaths across age groups by sex within the state because we want only 2 rows for each state; one for M and one for F because right now the data look like this:

```{r , echo=TRUE}
covidDeaths.MF.over50.1 %>% select(State, Age.Group, Sex, COVID.19.Deaths, Total.Deaths, proportional.covid.deaths) %>% 
head()
```

Here's how to summarize (or summarise) the values within a group. Think of it as compressing multiple rows into a single summary row.

```{r , class.output="scroll-100"}
covidDeaths.StateSummary.Over50 <- covidDeaths.MF.over50.1 %>% group_by(State,Sex) %>%
      summarise(Total.DeathsOver50=sum(Total.Deaths, na.rm=TRUE),
                Total.Covid19.DeathsOver50=sum(COVID.19.Deaths, na.rm=TRUE)) %>% 
  mutate(Total.prop.CovidDeathsOver50 = Total.Covid19.DeathsOver50/Total.DeathsOver50)
head(covidDeaths.StateSummary.Over50)
```

We have the data summarized nicely so we can try plotting:

```{r , echo=TRUE}
CovidStates <- ggbarplot(covidDeaths.StateSummary.Over50, x = "State", y = "Total.prop.CovidDeathsOver50",
          fill = "Sex", color = "Sex",           
          palette = c("pink", "blue"),  
          position = position_dodge(0.9),
          title="Proportion of total deaths due to Covid19 in people 50 and older \nby sex and state",
          x.text.angle = 90, xlab=FALSE, ylab="Proportion of Covid19 deaths"
          )
CovidStates + font("x.text", size=10)
```
This chart shows that across the states the proportion of deaths due to covid19 is generally a bit higher in Males. I will look at the male/female difference in death rate in another post

*HINT* if the chart is squeezed into the viewer box, pull the lower right frame sideways to make it bigger

to export the plot to a file - change to your path using code like this:
CovidStates %>% 
  ggexport(width = 800, height = 500, filename = "yourpath/CovidStates.png")

